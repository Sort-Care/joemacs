;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_WCTYPE_T" variable (:constant-flag t) nil [1352 1361])
            ("wctype_t" type
               (:typedef ("__darwin_wctype_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1363 1398]))          
      :file "_wctype_t.h"
      :pointmax 1421
      :fsize 1420
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_WCTYPE_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_UINT8_T" variable (:constant-flag t) nil [1351 1359])
            ("uint8_t" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [1360 1390]))          
      :file "_uint8_t.h"
      :pointmax 1413
      :fsize 1412
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_UINT8_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_UINT16_T" variable (:constant-flag t) nil [1352 1361])
            ("uint16_t" type
               (:typedef ("unsigned short")
                :type "typedef")
                nil [1362 1394]))          
      :file "_uint16_t.h"
      :pointmax 1418
      :fsize 1417
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_UINT16_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_UINT32_T" variable (:constant-flag t) nil [1352 1361])
            ("uint32_t" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [1362 1392]))          
      :file "_uint32_t.h"
      :pointmax 1416
      :fsize 1415
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_UINT32_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_UINT64_T" variable (:constant-flag t) nil [1352 1361])
            ("uint64_t" type
               (:typedef ("unsigned long long")
                :type "typedef")
                nil [1362 1398]))          
      :file "_uint64_t.h"
      :pointmax 1422
      :fsize 1421
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_UINT64_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_INTMAX_T" variable (:constant-flag t) nil [1352 1361])
            ("intmax_t" type
               (:typedef ("long int")
                :type "typedef")
                nil [1441 1467]))          
      :file "_intmax_t.h"
      :pointmax 1580
      :fsize 1579
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_INTMAX_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_UINTMAX_T" variable (:constant-flag t) nil [1353 1363])
            ("uintmax_t" variable (:type "unsigned int") nil [1459 1482]))          
      :file "_uintmax_t.h"
      :pointmax 1607
      :fsize 1606
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax '((LONG 1454 . 1458) (TYPEDEF 1446 . 1453))
      :lexical-table 
        '(("_UINTMAX_T")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_WCTRANS_T" variable (:constant-flag t) nil [1354 1364])
            ("wctrans_t" type
               (:typedef ("__darwin_wctrans_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1366 1403]))          
      :file "_wctrans_t.h"
      :pointmax 1427
      :fsize 1426
      :lastmodtime '(22517 34307 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_WCTRANS_T")
          )
))
  :file "!usr!include!_types!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
